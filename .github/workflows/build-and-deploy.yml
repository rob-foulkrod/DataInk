name: Build and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'Production'
        type: choice
        options:
          - Production
          - Staging

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0.x
        dotnet-quality: 'preview'
        
    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json', '**/packages.props') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore src/DataInk.Web/DataInk.Web.csproj

    - name: Build
      run: dotnet build src/DataInk.Web/DataInk.Web.csproj --no-restore --configuration Release

    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release
      if: hashFiles('**/Tests*/*.csproj') != ''

    - name: Publish
      run: dotnet publish src/DataInk.Web/DataInk.Web.csproj --configuration Release --no-build --output publish

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: dataink-webapp
        path: publish

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    environment:
      name: ${{ github.event.inputs.environment || 'Production' }}
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: dataink-webapp
        path: publish
        
    - name: Set App Settings
      run: |
        if [ -f "publish/appsettings.Production.json" ]; then
          echo "Using Production app settings"
        else
          echo "Creating Production app settings"
          echo '{"Logging": {"LogLevel": {"Default": "Information","Microsoft.AspNetCore": "Warning"}}}' > publish/appsettings.Production.json
        fi

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: publish
        
    - name: Check deployment status
      run: |
        echo "Deployed to ${{ steps.deploy-to-webapp.outputs.webapp-url }}"
        echo "Deployment completed successfully!"