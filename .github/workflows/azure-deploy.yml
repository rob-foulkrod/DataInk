name: Build and deploy to Azure

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'
  AZURE_WEBAPP_NAME: 'dataink-webapp'
  AZURE_RESOURCE_GROUP: 'DataInkRg1'
  WORKING_DIRECTORY: './src'
  PUBLISH_DIRECTORY: './publish'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Build
      run: dotnet build --configuration Release --no-restore
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Publish
      run: dotnet publish --configuration Release --no-build --output ${{ env.PUBLISH_DIRECTORY }}
      working-directory: ${{ env.WORKING_DIRECTORY }}

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v4
      with:
        name: app-publish
        path: ${{ env.WORKING_DIRECTORY }}/${{ env.PUBLISH_DIRECTORY }}
        retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v4
      with:
        name: app-publish
        path: ${{ env.PUBLISH_DIRECTORY }}

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        resource-group-name: ${{ env.AZURE_RESOURCE_GROUP }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.PUBLISH_DIRECTORY }}